# This Docker compose file spawns 3 services:
# 1. SQL instance (or MongoDB, depends on which one works better for Docker)
# 2. Web & Tunneling Server
# 3. The Crypto sign
# All of these containers' file systems are isolated from each other (and from the main PC) which is great

services:
  server:
    build:
      context: ./
      dockerfile: ./Site/Dockerfile
      # args:
      #   FWGROUPID: 9000
      #   FWGROUPNAME: filewrite
    environment:
      NODE_ENV: production
      PGUSER: postgres
      PGHOST: db
      PGDATABASE: main
      PGPORT: 5432      # Make sure these env vars match with the db service below
      CRYPTOPORT: 5312  # Make sure these env vars match with the crypto service below
      QUERYTIMEOUT: 10000
      CONNECTIONTIMEOUT: 5000
      # FWGROUPID: 1010   # Make sure this matches with build args
      # FWGROUPNAME: filewrite    # Make sure this matches with build args
    secrets:
      - cert
      - server_privkey
      - server_privkey_pwd
      - db_password
      - crypto_pubkey_sign      
      - crypto_pubkey         # We might not need this pubkey. If that's the case, remove this in prod later
    ports:
      - 443:443
      - 80:80
  db:
    # image: postgres
    build:
      context: ./
      dockerfile: ./Database/Dockerfile
    restart: always
    user: postgres
    secrets:
      - db_password
    environment:
      POSTGRES_DB: main
      POSTGRES_PASSWORD_FILE: /run/secrets/db_password
    expose:
      - 5432
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5
  crypto:
    build:
      context: ./
      dockerfile: ./Crypto/Dockerfile
    environment:
      PORT: 6312
    secrets:
      - crypto_sign_key_password  # ✅
      - crypto_enc_key_password # ✅
      - crypto_cert_key_password  # ✅
      - crypto_pubkey_sign    # ✅  
      - crypto_privkey_sign # ✅
      - crypto_cert         # ✅
      - crypto_cert_privkey  # ✅
      - crypto_privkey  # ✅
      - crypto_pubkey  # ✅
      - crypto_symm_password  # ✅
      - crypto_hmac_password  # ✅
    expose:
      - 6312      # Make sure this matches the PORT env variable
secrets:
  cert:
    file: ./Secrets/cert.pem
  server_privkey:
    file: ./Secrets/privKey.pem
  server_privkey_pwd:
    file: ./Secrets/privKeyPwd.txt      # This too
  db_password:
    file: ./Secrets/dbPassword.txt      # Set this to Brock Purdy or smth - encrypt this or set to env?
  crypto_cert_privkey:
    file: ./Secrets/cryptoHTTPKey.pem
  crypto_sign_key_password:
    file: ./Secrets/cryptoSignKeyPwd.txt  # Passwords for our crypto keys
  crypto_enc_key_password:
    file: ./Secrets/cryptoEncKeyPwd.txt  # Passwords for our crypto keys
  crypto_cert_key_password:
    file: ./Secrets/cryptoCertKeyPwd.txt  # Passwords for our crypto keys
  crypto_cert:
    file: ./Secrets/cryptoCert.pem
  crypto_pubkey_sign:
    file: ./Secrets/cryptoPubKeySign.pem
  crypto_privkey_sign:
    file: ./Secrets/cryptoPrivKeySign.pem
  crypto_pubkey:
    file: ./Secrets/cryptoPubKey.pem
  crypto_privkey:
    file: ./Secrets/cryptoPrivKey.pem
  crypto_symm_password:
    file: ./Secrets/cryptoSymmPwd.txt  # Password to do symmetric enc in crypto server
  crypto_hmac_password:
    file: ./Secrets/cryptoHmacPwd.txt  # Password to HMAC stuff in crypto server
